services:
  postgres:
    extends:
      file: docker-compose.development.yml
      service: postgres

  pgbouncer:
    extends:
      file: docker-compose.development.yml
      service: pgbouncer

  minio:
    extends:
      file: docker-compose.development.yml
      service: minio

  redis:
    extends:
      file: docker-compose.development.yml
      service: redis

  nextjs:
    container_name: nextjs
    image: nextjs:latest
    depends_on:
      postgres:
        condition: service_healthy
      pgbouncer:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_URL=${DATABASE_URL}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - REDIS_URL=${REDIS_URL}
      - REDIS_ACCESS_KEY=${REDIS_ACCESS_KEY}
    build:
      context: .
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    restart: always
    expose:
      - 3000

  caddy:
    image: caddy:2.9.1-alpine
    container_name: caddy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./docker_data/caddy_data:/data
      - ./docker_data/caddy_config:/config
    depends_on:
      - nextjs
